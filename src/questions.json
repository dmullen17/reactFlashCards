{"questionsList": [

    {"question": "PLACEHOLDER",
     "categories": ["=============================== BLANK QUESTIONS ==============================================="],
     "answer": ""},
     {"question": "",
     "categories": [""],
     "answer": ""},


    {"question": "PLACEHOLDER",
     "categories": ["=============================== DataScience QUESTIONS ==============================================="],
     "answer": ""},
     {"question": "What is cross validation?",
     "categories": ["DataScience"],
     "answer": "Cross-validation is an approach that you can use to estimate the performance of a machine learning algorithm with less variance than a single train-test set split. It works by splitting the dataset into k-parts (e.g. k = 5 or k = 10). Each split of the data is called a fold. The algorithm is trained on k − 1 folds with one held back and tested on the held back fold. This is repeated so that each fold of the dataset is given a chance to be the held back test set. After running cross-validation you end up with k-different performance scores that you can summarize using a mean and a standard deviation."},
     {"question": "What is stratified cross validation?",
     "categories": ["DataScience"],
     "answer": "Stratified cross validation is useful when you have imbalanced classes.  It sets the class distribution roughly equal in each fold."},
     {"question": "Describe the early stopping procedure and its benefits.",
     "categories": ["DataScience"],
     "answer": "Early stopping is an approach to training complex machine learning models to avoid overfitting. It works by monitoring the performance of the model that is being trained on a separate test dataset and stopping the training procedure once the performance on the test dataset has not improved after a fixed number of training iterations.  It avoids overfitting by attempting to automatically select the inflection point where perfor- mance on the test dataset starts to decrease while performance on the training dataset continues to improve as the model starts to overfit."},
     {"question": "How are standardization and normalization different?",
     "categories": ["DataScience"],
     "answer": "Standardization is a rescaling technique that refers to centering the distribution of the data on the value 0 and the standard deviation to the value 1. Together, the mean and the standard deviation can be used to summarize a normal distribution, also called the Gaussian distribution or bell curve.  Normalization can refer to different things based on the context; it usually refers to rescaling an input variable to the range between 0 and 1.  The min and max are required to do so."},
     {"question": "What are the four components of a time series? ",
     "categories": ["DataScience"],
     "answer": "Level: The baseline value for the series if it were a straight line.  Trend: The optional and often linear increasing or decreasing behavior of the series over time.  Seasonality: The optional repeating patterns or cycles of behavior over time. Noise: The optional variability in the observations that cannot be explained by the model."},
     {"question": "What is serial dependence in a time series?",
     "categories": ["DataScience"],
     "answer": "observations close together in time tend to be correlated"},
     {"question": "What is the sliding window method?",
     "categories": ["DataScience"],
     "answer": "Using the previous step in time series data to predict the next step.  Can also be k-1, k-2, ...k-n steps, etc."},
     {"question": "What is bagging?",
     "categories": ["DataScience"],
     "answer": "Bagging is an Ensemble Learning technique which aims to reduce the error learning through the implementation of a set of homogeneous machine learning algorithms. The key idea of bagging is the use of multiple base learners which are trained separately with a random sample from the training set, which through a voting or averaging approach, produce a more stable and accurate model"},
     {"question": "What is bootstrap aggregation?",
     "categories": ["DataScience"],
     "answer": "Bootstrap aggregation (or bagging) is using a set of weak learners in parallel to create sophisticated prediction."},
     {"question": "What are the two main components of the bagging technique?",
     "categories": ["DataScience"],
     "answer": "Random sampling with replacement to train models (bootstrapping) and the set of homogenous algorithms  (ensemble learning)"},
     {"question": "What is an auto-correlation plot?",
     "categories": ["DataScience"],
     "answer": "An autocorrelation plot is designed to show whether the elements of a time series are positively correlated, negatively correlated, or independent of each other."},
     {"question": "What does bayesian statistics allow you to do?",
     "categories": ["DataScience"],
     "answer": "Express the probability that the null hypothesis is true given the data. This is in contrast to classical statistics which gives you the probability of the data given a null hypothesis."},
     {"question": "What does a p-value tell you?",
     "categories": ["DataScience"],
     "answer": "The probability of the data given a null hypothesis"},
     {"question": "What is a density plot?",
     "categories": ["DataScience"],
     "answer": "A density plot is a smoothed, continuous version of a histogram estimated from the data"},
     {"question": "What are density plots used for?",
     "categories": ["DataScience"],
     "answer": "Typically, probability density plots are used to understand data distribution for a continuous variable and we want to know the likelihood (or probability) of obtaining a range of values that the continuous variable can assume."},
     {"question": "",
     "categories": ["DataScience"],
     "answer": ""},
     {"question": "",
     "categories": ["DataScience"],
     "answer": ""},
     {"question": "",
     "categories": ["DataScience"],
     "answer": ""},
     {"question": "",
     "categories": ["DataScience"],
     "answer": ""},
     {"question": "",
     "categories": ["DataScience"],
     "answer": ""},
     {"question": "",
     "categories": ["DataScience"],
     "answer": ""},
     {"question": "",
     "categories": ["DataScience"],
     "answer": ""},
     {"question": "",
     "categories": ["DataScience"],
     "answer": ""},
     {"question": "",
     "categories": ["DataScience"],
     "answer": ""},
     {"question": "",
     "categories": ["DataScience"],
     "answer": ""},
     {"question": "",
     "categories": ["DataScience"],
     "answer": ""},
     {"question": "",
     "categories": ["DataScience"],
     "answer": ""},
     {"question": "",
     "categories": ["DataScience"],
     "answer": ""},
     {"question": "",
     "categories": ["DataScience"],
     "answer": ""},
     {"question": "",
     "categories": ["DataScience"],
     "answer": ""},
     {"question": "",
     "categories": ["DataScience"],
     "answer": ""},
     {"question": "",
     "categories": ["DataScience"],
     "answer": ""},
     {"question": "",
     "categories": ["DataScience"],
     "answer": ""},

    {"question": "PLACEHOLDER",
     "categories": ["=============================== Statistical testings QUESTIONS ==============================================="],
     "answer": ""},
     {"question": "What is the definition of the power of a test?",
     "categories": ["Stats tests"],
     "answer": "Power is the probability that we will correctly reject the null hypothesis.  Alternatively you could say that power is the probability that we will correctly get a small p-value."},
     {"question": "Why does power increase if we lower our threshold significance level (alpha?).  Assume we lower the threshold from 1% to 5%.",
     "categories": ["Stats tests"],
     "answer": "Power is the probability we will correctly get a small p-value.  So if we lower our lower our threshold for a significant p-value that will increase the probability we correctly get a small p-value (or power)."},
     {"question": "What are the two ways to increase statistical power?",
     "categories": ["Stats tests"],
     "answer": "1: Increase the number of measurements we collect.  2: Lower significance level alpha."},
     {"question": "What is a p-value in layman's terms?",
     "categories": ["Stats tests"],
     "answer": "p-values are numbers between 0 and 1 that describe how confident we are some descriptive statistic (like mean) is different between two groups."},
     {"question": "If you get a large p-value (~.9) how would you describe the conclusion in layman's terms?",
     "categories": ["Stats tests"],
     "answer": "We fail to see a difference in the two groups."},
     {"question": "What is a false positive?",
     "categories": ["Stats tests"],
     "answer": "Getting a small p-value when there is actually no difference between the two groups."},
     {"question": "If the significance level is set to alpha = .01 - then what is the false positive rate?",
     "categories": ["Stats tests"],
     "answer": "1%.  ~ 1 out of every 100 experiments would result in a false positive."},
     {"question": "What does p-value tell you about the magnitude of difference between two groups?",
     "categories": ["Stats tests"],
     "answer": "Nothing.  While a large effect size is more likely to result in a small p-value; the p-value itself can't tell you anything about effect size."},
     {"question": "What is p-hacking?",
     "categories": ["Stats tests"],
     "answer": "Repeating an experiment over and over again until we get a significant result."},
     {"question": "What is the multiple testing problem?",
     "categories": ["Stats tests"],
     "answer": "Doing a lot of related tests without adjusting the significance level to account for more than 1 test."},
     {"question": "What is false discovery rate?",
     "categories": ["Stats tests"],
     "answer": "TODO - add answer"},
     {"question": "What is power analysis used for?",
     "categories": ["Stats tests"],
     "answer": "If we use the sample size recommended by a power analysis then we know we used enough data to make a good decision."},
     {"question": "What is the relationship between MDE and power?",
     "categories": ["Stats tests"],
     "answer": "A larger sample size is required to detect a smaller MDE with constant power."},
     {"question": "What is a type I error?",
     "categories": ["Stats tests"],
     "answer": "When we incorrectly conclude the variation (treatment) is superior."},
     {"question": "How do you control type I error? What does this do to type II error?",
     "categories": ["Stats tests"],
     "answer": "Increasing the p-value reduces the likelihood of a type I error.  However this will also increase type II error as it is more difficult to identify a winning treatment."},
     {"question": "",
     "categories": ["Stats tests"],
     "answer": ""},
     {"question": "",
     "categories": ["Stats tests"],
     "answer": ""},
     {"question": "",
     "categories": ["Stats tests"],
     "answer": ""},
     {"question": "",
     "categories": ["Stats tests"],
     "answer": ""},
     {"question": "",
     "categories": ["Stats tests"],
     "answer": ""},
     {"question": "",
     "categories": ["Stats tests"],
     "answer": ""},
     {"question": "",
     "categories": ["Stats tests"],
     "answer": ""},
     {"question": "",
     "categories": ["Stats tests"],
     "answer": ""},
     {"question": "",
     "categories": ["Stats tests"],
     "answer": ""},
     {"question": "",
     "categories": ["Stats tests"],
     "answer": ""},
     {"question": "",
     "categories": ["Stats tests"],
     "answer": ""},
     {"question": "",
     "categories": ["Stats tests"],
     "answer": ""},
     {"question": "",
     "categories": ["Stats tests"],
     "answer": ""},
     {"question": "",
     "categories": ["Stats tests"],
     "answer": ""},
     {"question": "",
     "categories": ["Stats tests"],
     "answer": ""},
     {"question": "",
     "categories": ["Stats tests"],
     "answer": ""},
     {"question": "",
     "categories": ["Stats tests"],
     "answer": ""},
     {"question": "",
     "categories": ["Stats tests"],
     "answer": ""},
     {"question": "",
     "categories": ["Stats tests"],
     "answer": ""},
     {"question": "",
     "categories": ["Stats tests"],
     "answer": ""},
     {"question": "",
     "categories": ["Stats tests"],
     "answer": ""},
     {"question": "",
     "categories": ["Stats tests"],
     "answer": ""},
     {"question": "",
     "categories": ["Stats tests"],
     "answer": ""},
     {"question": "",
     "categories": ["Stats tests"],
     "answer": ""},
     {"question": "",
     "categories": ["Stats tests"],
     "answer": ""},
     {"question": "",
     "categories": ["Stats tests"],
     "answer": ""},
     {"question": "",
     "categories": ["Stats tests"],
     "answer": ""},


    {"question": "PLACEHOLDER",
     "categories": ["=============================== SQL QUESTIONS ==============================================="],
     "answer": ""},
     {"question": "What is the 'Using()' function used for?",
     "categories": ["SQL"],
     "answer": "It can be used to join two tables that share a distinct key name."},
     {"question": "How do you update the values in a column?",
     "categories": ["SQL"],
     "answer": "Update table tableName Set columnName=value Where condition=value;"},
     {"question": "Can you use window functions like row_number() in a where clause?",
     "categories": ["SQL"],
     "answer": "No you can't. You need to use a nested select query to filter on window function columns."},
     {"question": "What does the intersect keyword do?",
     "categories": ["SQL"],
     "answer": "It returns all results that are common to both queries. Select * From a Intersect Select * From b -- Returns all the rows that appear in both b and a."},
     {"question": "What does a Union statement do?",
     "categories": ["SQL"],
     "answer": ""},
     {"question": "What is the escape character in PostgreSQL",
     "categories": ["SQL"],
     "answer": "a forward slash \."},
     {"question": "What function do you use to convert an upper case string to lower?",
     "categories": ["SQL"],
     "answer": "lower()"},
     {"question": "How do you get nulls first using the order by clause?",
     "categories": ["SQL"],
     "answer": "order by nulls first"},	
     {"question": "How can you use nullif to handle divide by zero?",
     "categories": ["SQL"],
     "answer": "cost / nullif(conversions, 0) as cpa -- this sets the denominator to null if it equals. Therefore the result is null."},
     {"question": "How do you select the first value of a column?",
     "categories": ["SQL"],
     "answer": "first_value(total_cohort) over (partition by.. etc."},
     {"question": "How do you create a moving sum column (or any other cumulative window function)",
     "categories": ["SQL"],
     "answer": "sum(value) over (partition by value2 order by value 3 rows between unbounded preceding and current row)"},
     {"question": "How do you get the column metadata for a table in PostgreSQL?",
     "categories": ["SQL"],
     "answer": ""},
     {"question": "How do you select all table names from a schema?",
     "categories": ["SQL"],
     "answer": "Select * From pg_catalog.pg_tables Where schemaname = 'dbt_dominic'"},
     {"question": "How do you round a float to 2 places in postgres?",
     "categories": ["SQL"],
     "answer": "cast((trunc(round(celero_cum_avg_approval_ratio*100, 2), 2)) as char(5)) + '%'"},
     {"question": "",
     "categories": ["SQL"],
     "answer": ""},
     {"question": "",
     "categories": ["SQL"],
     "answer": ""},
     {"question": "",
     "categories": ["SQL"],
     "answer": ""},
     {"question": "",
     "categories": ["SQL"],
     "answer": ""},
     {"question": "",
     "categories": ["SQL"],
     "answer": ""},
     {"question": "",
     "categories": ["SQL"],
     "answer": ""},
     {"question": "",
     "categories": ["SQL"],
     "answer": ""},
     {"question": "",
     "categories": ["SQL"],
     "answer": ""},
     {"question": "",
     "categories": ["SQL"],
     "answer": ""},
     {"question": "",
     "categories": ["SQL"],
     "answer": ""},
     {"question": "",
     "categories": ["SQL"],
     "answer": ""},
     {"question": "",
     "categories": ["SQL"],
     "answer": ""},
     {"question": "",
     "categories": ["SQL"],
     "answer": ""},
     {"question": "",
     "categories": ["SQL"],
     "answer": ""},
     {"question": "",
     "categories": ["SQL"],
     "answer": ""},
     {"question": "",
     "categories": ["SQL"],
     "answer": ""},
     {"question": "",
     "categories": ["SQL"],
     "answer": ""},
     {"question": "",
     "categories": ["SQL"],
     "answer": ""},
     {"question": "",
     "categories": ["SQL"],
     "answer": ""},


    {"question": "PLACEHOLDER",
     "categories": ["=============================== DBT QUESTIONS ==============================================="],
     "answer": ""},
     {"question": "What is dbt?",
     "categories": ["DBT"],
     "answer": "dbt (data build tool) enables analytics engineers to transform data in their warehouses by simply writing select statements. dbt handles turning these select statements into tables and views."},
    {"question": "What does DBT do in layman's terms?",
     "categories": ["DBT"],
     "answer": "DBT transforms raw data in the data warehouse. It's the T in ELT. It's part of the transform after load architecture."},
    {"question": "Why is ELT becoming popular?",
     "categories": ["DBT"],
     "answer": "Data warehouses like RedShift and BigQuery are performant and scalable - so it makes sense to transform the data in the warehouse rather than in an external processing layer."},
    {"question": "How does dbt work from a user perspective?",
     "categories": ["DBT"],
     "answer": "It has a compiler and a runner. Users write DBT code in a text editor and invoke it from the command line. dbt compiles the code to raw SQL and executes the code against the configured warehouse"},
    {"question": "What is a DBT model?",
     "categories": ["DBT"],
     "answer": "model: a data transformation, expressed in a single SELECT statement."},
    {"question": "What does the jinja code ref() do?",
     "categories": ["DBT"],
     "answer": "ref() allows users to reference other data models. "},
    {"question": "What is a data model?",
     "categories": ["DBT"],
     "answer": "Any transformed view of raw data"},
    {"question": "What is the function of the tags: daily, ASAP, hourly, summary, etc.",
     "categories": ["DBT"],
     "answer": "These tags are used by our provider to determine when to run jobs. Available in DBT cloud."},
    {"question": "What is the function of Views?",
     "categories": ["DBT"],
     "answer": "An alias for queries/formatting behind the scenes. Ex. Some tables have json data - a view can convert this so a user doesn't have to. This also keeps code cleaner as you don't need to copy/paste formatting queries - you can just reference them."},
    {"question": "What does materialized = 'ephemeral' mean?",
     "categories": ["DBT"],
     "answer": "This joins two tables when their respective schemas have changed (ex. call_log.sql). Doesn't actually go into redshift - dbt selects that the schema join when you reference the table."},
    {"question": "What does the utils.surrogate_key function do? ",
     "categories": ["DBT"],
     "answer": "It creates a unique hash based on specified input columns. It can be used to determine if relevant values in a row changed and if it should be replaced."},
    {"question": "How is utils.surrogate_key used in summary_approval_ratios.sql?",
     "categories": ["DBT"],
     "answer": "In the absence of a primary key it can be used as a replacement primary key."},
    {"question": "What's the easiest way to see your Jinja + SQL code converted to raw SQL?",
     "categories": ["DBT"],
     "answer": "dbt run --debug. This will print your query to the console in raw SQL. You can then use a warehouse IDE to debug your query."},
    {"question": "What does the --full-refresh parameter in dbt run do?",
     "categories": ["DBT"],
     "answer": "It will drop the model you're building and build it again. Otherwise it will do an incremental build."},
    {"question": "What do the NVL and NVL2 functions do?",
     "categories": ["DBT"],
     "answer": "These are if null handlers. If null then x. NVL2 is If null then x, if x is null then y."},
    {"question": "Where do you add documentation for tables?",
     "categories": ["DBT"],
     "answer": "_schema.yml contains the names of the models and references docs.md for descriptions (which can be in markdown)."},
    {"question": "What's an easy method of testing changes you made to a pre-existing table in the CRM?",
     "categories": ["DBT"],
     "answer": "Use a left join with crm.table and dev.table."},
    {"question": "What does dist='all' mean?",
     "categories": ["DBT"],
     "answer": "The table is distributed on all of our clusters so it's faster to access. Usually reserved for lookup tables."},
    {"question": "What does materialized='incremental' mean?",
     "categories": ["DBT"],
     "answer": "This used for large tables. It's computationally expensive to rebuild them so rows are added on."},
    {"question": "Why should you use dbt run first when working with a new schema?",
     "categories": ["DBT"],
     "answer": "None of the tables are built yet. Dbt run will build these tables. You should also run dbt deps to install dependencies."},
    {"question": "What is dbt_utils?",
     "categories": ["DBT"],
     "answer": "A utility package for dbt hosted on GitHub. Install it by running dbt deps?"},
    {"question": "Which two files do you need to modify to run dbt tests?",
     "categories": ["DBT"],
     "answer": "You need to define tests for a table in its corresponding schema.yml and provide a table description in its corresponding docs.md file."},
    {"question": "tests: not_null and unique are pre-defined tests. How do you write a test for boolean values? Why do you need quote: false?",
     "categories": ["DBT"],
     "answer": "- accepted_values: values: ['true', 'false'] quote: false. You need quote false because accepted_values will single quote the list of accepted values by default."},
    {"question": "What does dbt test do? How do you run a tests for one model? ",
     "categories": ["DBT"],
     "answer": "'dbt test' runs schema validations and custom data tests. 'dbt test --models one_specific_model' runs tests for one model only. (Do not include the .sql extension at the end of the model name!"},
    {"question": "How do you run a manual job and why should you do it?",
     "categories": ["DBT"],
     "answer": "When you make a change to an incremental table it will need a full refresh to apply the changes. Go into dbt cloud --> Manual CRM --> Settings --> Edit --> Add the command you want to commands tab --> Save --> Manual CRM --> Run Now."},
    {"question": "Where can you find example dbt setups?",
     "categories": ["DBT"],
     "answer": "Fishtown analytics on GH has a couple example repos of dbt setups. https://github.com/fishtown-analytics/snowplow (and a couple others)."},
    {"question": "How should you create temporary SQL tables in DBT models?",
     "categories": ["DBT"],
     "answer": "Using the with clause."},
    {"question": "Why is the {ref()} function important in dbt?",
     "categories": ["DBT"],
     "answer": "Importantly, dbt also uses the ref function to determine the sequence in which to execute the models – in the above example, base_orders and base_payments need to be built prior to building the orders model."},
    {"question": "What are snapshots and why do analysts need to use them?",
     "categories": ["DBT"],
     "answer": "Snapshots provide a way to look back at changes made to a mutable table."},
    {"question": "What are Slowly Changing Dimensions (SCDs)?",
     "categories": ["DBT"],
     "answer": "Data that changes slowly but unpredictably, rather than according to a regular schedule. For example, a database may contain a fact table that stores sales records. This fact table would be linked to dimensions by means of foreign keys. One of these dimensions may contain data about the company's salespeople: e.g., the regional offices in which they work. However, the salespeople are sometimes transferred from one regional office to another. For historical sales reporting purposes it may be necessary to keep a record of the fact that a particular sales person had been assigned to a particular regional office at an earlier date, whereas that sales person is now assigned to a different regional office."},
    {"question": "How does dbt deal with SCDs?",
     "categories": ["DBT"],
     "answer": "DBT uses type 2 SCD management methodology. It adds dbt_valid_from and dbt_valid_to fields that indicate when the records was valid. It also adds an internal unique key (dbt_scd_id) and the date updated (dbt_updated_at)."},
    {"question": "Where do you create snapshots?",
     "categories": ["DBT"],
     "answer": "Snapshots are .sql files in the snapshots folder. dbt will look for snapshot blocks in the snapshot-paths path defined in your dbt_project.yml. "},
    {"question": "What is the timestamp snapshot strategy.",
     "categories": ["DBT"],
     "answer": "A strategy dbt uses to tell if a row has changed. This requires an 'updated_at' column - if the timestamp is changed dbt will invalidate the row and add a new one."},
    {"question": "What is the check cols strategy?",
     "categories": ["DBT"],
     "answer": "This strategy works by comparing a list of columns between their current and historical values. It's more efficient to use a surrogate key as a row hash when possible."},
    {"question": "Is timestamp or check the recommended strategy to compare rows?",
     "categories": ["DBT"],
     "answer": "timestamp"},
    {"question": "How do you run snapshots?",
     "categories": ["DBT"],
     "answer": "dbt snapshot"},
    {"question": "What happens when you include an upper case name in redshift model or dbt model?",
     "categories": ["DBT"],
     "answer": "It will change any upper to lower case on the first run and fail on the second run. Error message: When searching for a relation, dbt found an approximate match. Instead of guessing which relation to use, dbt will move on."},
    {"question": "How do you update a dbt package?",
     "categories": ["DBT"],
     "answer": "dbt deps"},
    {"question": "What is a serializable violation error?",
     "categories": ["DBT"],
     "answer": "When one table in the same job depends on another.  This applies when individual operations inside two transactions cross-reference each other in a way that could affect the outcome of the other transaction. "},
    {"question": "How do you reference a table that does not have a corresponding model file in the dbt project?",
     "categories": ["DBT"],
     "answer": "Either reference it directly with something like crm.state_lookup, or use 'this' for a more dynamic approach: {{this.schema}}.state_lookup"},
    {"question": "What dbt cli command lists model dependencies?",
     "categories": ["DBT"],
     "answer": "dbt ls -m + fact_customer_orders+"},
    {"question": "",
     "categories": ["DBT"],
     "answer": ""},
    {"question": "",
     "categories": ["DBT"],
     "answer": ""},
    {"question": "",
     "categories": ["DBT"],
     "answer": ""},
    {"question": "",
     "categories": ["DBT"],
     "answer": ""},
    {"question": "",
     "categories": ["DBT"],
     "answer": ""},

{"question": "PLACEHOLDER",
     "categories": ["=============================== AWS QUESTIONS ==============================================="],
     "answer": ""},
     {"question": "How do you view all the amazon S3 buckets with AWS CLI?",
     "categories": ["AWS"],
     "answer": "aws s3 ls"},
    {"question": "What two arguments do you need to provide to 'aws s3 cp' to upload a file to S3?",
     "categories": ["AWS"],
     "answer": "Source file and destination.  Example: aws s3 cp ~/Downloads/customer_sample_pis35.csv s3://sc-crm-redshift/customer_sample_pis35/"},
    {"question": "How do you copy a local file to an elastic cloud instance?",
     "categories": ["AWS"],
     "answer": "scp -i ~/.ssh/id_rsa ~/Documents/github/data-science/Metrics/dbt_cloud_summary/dbtcloud_summary.py dominic@10.0.10.168:/home/dominic/dbtcloud_run_summary.py"},
    {"question": "How do you list all of the files in an S3 bucket with aws CLI?",
     "categories": ["AWS"],
     "answer": "aws s3 ls s3://sc-verifi-vae"},
    {"question": "",
     "categories": ["AWS"],
     "answer": ""},
    {"question": "",
     "categories": ["AWS"],
     "answer": ""},
    {"question": "",
     "categories": ["AWS"],
     "answer": ""},
    {"question": "",
     "categories": ["AWS"],
     "answer": ""},
    {"question": "",
     "categories": ["AWS"],
     "answer": ""},
    {"question": "",
     "categories": ["AWS"],
     "answer": ""},
    {"question": "",
     "categories": ["AWS"],
     "answer": ""},
    {"question": "",
     "categories": ["AWS"],
     "answer": ""},
    {"question": "",
     "categories": ["AWS"],
     "answer": ""},
    {"question": "",
     "categories": ["AWS"],
     "answer": ""},
    {"question": "",
     "categories": ["AWS"],
     "answer": ""},
    {"question": "",
     "categories": ["AWS"],
     "answer": ""},
    {"question": "",
     "categories": ["AWS"],
     "answer": ""},
    {"question": "",
     "categories": ["AWS"],
     "answer": ""},
    {"question": "",
     "categories": ["AWS"],
     "answer": ""},
    {"question": "",
     "categories": ["AWS"],
     "answer": ""},
    {"question": "",
     "categories": ["AWS"],
     "answer": ""},
    {"question": "",
     "categories": ["AWS"],
     "answer": ""},
    {"question": "",
     "categories": ["AWS"],
     "answer": ""},
    {"question": "",
     "categories": ["AWS"],
     "answer": ""},
    {"question": "",
     "categories": ["AWS"],
     "answer": ""},
    {"question": "",
     "categories": ["AWS"],
     "answer": ""},
    {"question": "",
     "categories": ["AWS"],
     "answer": ""},
    {"question": "",
     "categories": ["AWS"],
     "answer": ""},
    {"question": "",
     "categories": ["AWS"],
     "answer": ""},
    {"question": "",
     "categories": ["AWS"],
     "answer": ""},
    {"question": "",
     "categories": ["AWS"],
     "answer": ""},
    {"question": "",
     "categories": ["AWS"],
     "answer": ""},
    {"question": "",
     "categories": ["AWS"],
     "answer": ""},
    {"question": "",
     "categories": ["AWS"],
     "answer": ""},
    {"question": "",
     "categories": ["AWS"],
     "answer": ""},
    {"question": "",
     "categories": ["AWS"],
     "answer": ""},
    {"question": "",
     "categories": ["AWS"],
     "answer": ""},

{"question": "PLACEHOLDER",
     "categories": ["=============================== mlflow QUESTIONS ==============================================="],
     "answer": ""},
     {"question": "What is mlflow?",
     "categories": ["mlflow"],
     "answer": "An open source library for managing data science projects"},
     {"question": "",
     "categories": ["mlflow"],
     "answer": ""},
     {"question": "",
     "categories": ["mlflow"],
     "answer": ""},
     {"question": "",
     "categories": ["mlflow"],
     "answer": ""},
     {"question": "",
     "categories": ["mlflow"],
     "answer": ""},
     {"question": "",
     "categories": ["mlflow"],
     "answer": ""},
     {"question": "",
     "categories": ["mlflow"],
     "answer": ""},
     {"question": "",
     "categories": ["mlflow"],
     "answer": ""},
     {"question": "",
     "categories": ["mlflow"],
     "answer": ""},
     {"question": "",
     "categories": ["mlflow"],
     "answer": ""},
     {"question": "",
     "categories": ["mlflow"],
     "answer": ""},
     {"question": "",
     "categories": ["mlflow"],
     "answer": ""},
     {"question": "",
     "categories": ["mlflow"],
     "answer": ""},
     {"question": "",
     "categories": ["mlflow"],
     "answer": ""},
     {"question": "",
     "categories": ["mlflow"],
     "answer": ""},
     {"question": "",
     "categories": ["mlflow"],
     "answer": ""},
     {"question": "",
     "categories": ["mlflow"],
     "answer": ""},
     {"question": "",
     "categories": ["mlflow"],
     "answer": ""},
     {"question": "",
     "categories": ["mlflow"],
     "answer": ""},
     {"question": "",
     "categories": ["mlflow"],
     "answer": ""},
     {"question": "",
     "categories": ["mlflow"],
     "answer": ""},
     {"question": "",
     "categories": ["mlflow"],
     "answer": ""},
     {"question": "",
     "categories": ["mlflow"],
     "answer": ""},
     {"question": "",
     "categories": ["mlflow"],
     "answer": ""},
     {"question": "",
     "categories": ["mlflow"],
     "answer": ""},
     {"question": "",
     "categories": ["mlflow"],
     "answer": ""},
     {"question": "",
     "categories": ["mlflow"],
     "answer": ""},
     {"question": "",
     "categories": ["mlflow"],
     "answer": ""},

{"question": "PLACEHOLDER",
     "categories": ["=============================== Singer / Data engineering QUESTIONS ==============================================="],
     "answer": ""},
     {"question": "What is Singer?",
     "categories": ["Singer"],
     "answer": "An open source library for writing scripts that move data. It is a specification that describes how data loading and extraction scripts should communicate."},
     {"question": "What are the three zones of a company data lake?",
     "categories": ["Singer"],
     "answer": "The landing zone contains raw data, the clean zone contains clean data, and the business zone contains domain-specific data."},
     {"question": "What is a parquet file?",
     "categories": ["Singer"],
     "answer": ""},
     {"question": "What are taps and targets?",
     "categories": ["Singer"],
     "answer": "A tap is an extraction script and a target is a loading script.  These are language independent."},
     {"question": "Why does singer need to keep track of state?",
     "categories": ["Singer"],
     "answer": "You can use state to store the date last updated in your database.  That way when your tap next runs it knows to only extra records > max date in state.  It will then update state at run end."},
     {"question": "What should you do to state if there are no new records?",
     "categories": ["Singer"],
     "answer": "Preserve the previous state.  Otherwise you run the risk of starting over from the beginning."},
     {"question": "",
     "categories": ["Singer"],
     "answer": ""},
     {"question": "",
     "categories": ["Singer"],
     "answer": ""},
     {"question": "",
     "categories": ["Singer"],
     "answer": ""},
     {"question": "",
     "categories": ["Singer"],
     "answer": ""},
     {"question": "",
     "categories": ["Singer"],
     "answer": ""},
     {"question": "",
     "categories": ["Singer"],
     "answer": ""},
     {"question": "",
     "categories": ["Singer"],
     "answer": ""},
     {"question": "",
     "categories": ["Singer"],
     "answer": ""},
     {"question": "",
     "categories": ["Singer"],
     "answer": ""},
     {"question": "",
     "categories": ["Singer"],
     "answer": ""},
     {"question": "",
     "categories": ["Singer"],
     "answer": ""},
     {"question": "",
     "categories": ["Singer"],
     "answer": ""},
     {"question": "",
     "categories": ["Singer"],
     "answer": ""},
     {"question": "",
     "categories": ["Singer"],
     "answer": ""},
     {"question": "",
     "categories": ["Singer"],
     "answer": ""},
     {"question": "",
     "categories": ["Singer"],
     "answer": ""},
     {"question": "",
     "categories": ["Singer"],
     "answer": ""},
     {"question": "",
     "categories": ["Singer"],
     "answer": ""},
     {"question": "",
     "categories": ["Singer"],
     "answer": ""},
     {"question": "",
     "categories": ["Singer"],
     "answer": ""},
     {"question": "",
     "categories": ["Singer"],
     "answer": ""},
     {"question": "",
     "categories": ["Singer"],
     "answer": ""},
     {"question": "",
     "categories": ["Singer"],
     "answer": ""},
     {"question": "",
     "categories": ["Singer"],
     "answer": ""},
     {"question": "",
     "categories": ["Singer"],
     "answer": ""},
     {"question": "",
     "categories": ["Singer"],
     "answer": ""},
     {"question": "",
     "categories": ["Singer"],
     "answer": ""},

{"question": "PLACEHOLDER",
     "categories": ["=============================== Docker QUESTIONS ==============================================="],
     "answer": ""},
     {"question": "What is Docker?",
     "categories": ["Docker"],
     "answer": "Docker is a tool that allows developers, sys-admins etc. to easily deploy their applications in a sandbox (called containers) to run on the host operating system i.e. Linux. The key benefit of Docker is that it allows users to package an application with all of its dependencies into a standardized unit for software development."},
     {"question": "Why are containers better than virtual machines?",
     "categories": ["Docker"],
     "answer": "Containers leverage the low level mechanics of the OS - providing most of the isolation at a fraction of the computing power."},
     {"question": "What is a docker image?",
     "categories": ["Docker"],
     "answer": "A Docker image is a read-only template that contains a set of instructions for creating a container that can run on the Docker platform. It provides a convenient way to package up applications and preconfigured server environments, which you can use for your own private use or share publicly with other Docker users"},
     {"question": "How do you see all the docker images available on your system?",
     "categories": ["Docker"],
     "answer": "docker images"},
     {"question": "What happens if you call docker run busybox (busybox is an image name here)",
     "categories": ["Docker"],
     "answer": "When you call run, the Docker client finds the image (busybox in this case), loads up the container and then runs a command in that container. When we run docker run busybox, we didn't provide a command, so the container booted up, ran an empty command and then exited."},
     {"question": "How do you see all docker containers that are currently running?",
     "categories": ["Docker"],
     "answer": "docker ps"},
     {"question": "How do you see all containers that we ran?",
     "categories": ["Docker"],
     "answer": "docker ps -a"},
     {"question": "How do you exit a docker container?",
     "categories": ["Docker"],
     "answer": "exit or crtl+C.  (exit worked more reliably for me)."},
     {"question": "How do you detach from an interactive docker instance and leave it running?",
     "categories": ["Docker"],
     "answer": "Use the escape sequence crtl+P crtl+Q.  You can verify it's still running with docker ps -a."},
     {"question": "Which arguments to docker run give you an interactive tty session?",
     "categories": ["Docker"],
     "answer": "docker run -i -t image."},
     {"question": "How do you remove a docker container?",
     "categories": ["Docker"],
     "answer": "docker rm {container ID}"},
     {"question": "How do you list all container IDs that have exited?",
     "categories": ["Docker"],
     "answer": "docker ps -a -q -f status=exited.  (the -q flag, only returns the numeric IDs and -f filters output based on conditions provided)"},
     {"question": "How do you remove all docker containers with a status of exited?",
     "categories": ["Docker"],
     "answer": "docker rm $(docker ps -a -q -f status=exited)."},
     {"question": "Can you remove a running container?",
     "categories": ["Docker"],
     "answer": "No. You need to stop it first with: docker container stop {container ID}."},
     {"question": "How do you ssh into a running container?",
     "categories": ["Docker"],
     "answer": "docker exec -it {container ID} sh.  (sometimes bash or /bin/bash is used instead of sh)."},
     {"question": "What does docker container prune do?",
     "categories": ["Docker"],
     "answer": "It removes all stopped containers."},
     {"question": "What is Docker Hub?",
     "categories": ["Docker"],
     "answer": "A registry of Docker images. You can think of the registry as a directory of all available Docker images. If required, one can host their own Docker registries and can use them for pulling images."},
     {"question": "What is Docker Daemon?",
     "categories": ["Docker"],
     "answer": "The background service running on the host that manages building, running and distributing Docker containers. The daemon is the process that runs in the operating system which clients talk to."},
     {"question": "What is Docker Client?",
     "categories": ["Docker"],
     "answer": "The command line tool that allows the user to interact with the daemon. More generally, there can be other forms of clients too - such as Kitematic which provide a GUI to the users."},
     {"question": "What are docker images?",
     "categories": ["Docker"],
     "answer": "The blueprints of our application which form the basis of containers."},
     {"question": "What are Docker containers?",
     "categories": ["Docker"],
     "answer": "The blueprints of our application which form the basis of containers."},
     {"question": "",
     "categories": ["Docker"],
     "answer": ""},
     {"question": "",
     "categories": ["Docker"],
     "answer": ""},
     {"question": "",
     "categories": ["Docker"],
     "answer": ""},
     {"question": "",
     "categories": ["Docker"],
     "answer": ""},
     {"question": "",
     "categories": ["Docker"],
     "answer": ""},
     {"question": "",
     "categories": ["Docker"],
     "answer": ""},
     {"question": "",
     "categories": ["Docker"],
     "answer": ""},
     {"question": "",
     "categories": ["Docker"],
     "answer": ""},
     {"question": "",
     "categories": ["Docker"],
     "answer": ""},
     {"question": "",
     "categories": ["Docker"],
     "answer": ""},
     {"question": "",
     "categories": ["Docker"],
     "answer": ""},
     {"question": "",
     "categories": ["Docker"],
     "answer": ""},
     {"question": "",
     "categories": ["Docker"],
     "answer": ""},
     {"question": "",
     "categories": ["Docker"],
     "answer": ""},
     {"question": "",
     "categories": ["Docker"],
     "answer": ""},
     {"question": "",
     "categories": ["Docker"],
     "answer": ""},



{"question": "PLACEHOLDER",
     "categories": ["=============================== Tableau QUESTIONS ==============================================="],
     "answer": ""},
     {"question": "What data sources can you pull data from? Give an example of a cross-database join.",
     "categories": ["Tableau"],
     "answer": "You can join data from local sources and databases in the cloud. An example cross database join is tables from Hadoop and Redshift."},
     {"question": "How do you alter the way two data sources are joined?",
     "categories": ["Tableau"],
     "answer": "You can click on the pie chart joining the two data sources to do a left, inner, etc. join."},
     {"question": "What data and metadata management can you do on the first page joining data sources?",
     "categories": ["Tableau"],
     "answer": "Change data types, rename rows, split entries based on regex patterns."},
     {"question": "What are dimensions and measures?  What colors are they?",
     "categories": ["Tableau"],
     "answer": "Dimensions are categorical variables while measurements are continuous. They are blue and green respectively."},
     {"question": "How do you pivot a table in Tableau?",
     "categories": ["Tableau"],
     "answer": "Just drag the continuous to alternate positions in the columns entries."},
     {"question": "How do you perform common business metric calculations? What if you just want these as hover-over information?",
     "categories": ["Tableau"],
     "answer": "Right click on the response variable and click 'quick table calculation'. You can drag the graph to the tooltip box for hover information."},
     {"question": "How do you leave an annotation on a graph?",
     "categories": ["Tableau"],
     "answer": "Right-click and select add-annotation."},
     {"question": "How do you extract the data behind a graph?",
     "categories": ["Tableau"],
     "answer": "Right click and select duplicate as crosstab or copy data."},
     {"question": "How do you add back your original graph after you've done a quick table calculation?",
     "categories": ["Tableau"],
     "answer": "Just drag the original metric back. This will create two graphs."},
     {"question": "How do you color in the row cells? How do you add text to these?",
     "categories": ["Tableau"],
     "answer": "Select Marks --> Square (or whatever else). To add text click on the T in the square in the top row.	"},
     {"question": "What does right clicking on a field and selecting 'show highlighter do'?",
     "categories": ["Tableau"],
     "answer": "This applies a filter to the graph that allows the user to select a specific variable from the field to highlight."},
     {"question": "How do you convert a measure to a dimension?",
     "categories": ["Tableau"],
     "answer": "You drag it to the corresponding dimension/measure field. You can also right click and hit convert."},
     {"question": "",
     "categories": ["Tableau"],
     "answer": ""},
     {"question": "",
     "categories": ["Tableau"],
     "answer": ""},
     {"question": "",
     "categories": ["Tableau"],
     "answer": ""},
     {"question": "",
     "categories": ["Tableau"],
     "answer": ""},
     {"question": "",
     "categories": ["Tableau"],
     "answer": ""},
     {"question": "",
     "categories": ["Tableau"],
     "answer": ""},
     {"question": "",
     "categories": ["Tableau"],
     "answer": ""},
     {"question": "",
     "categories": ["Tableau"],
     "answer": ""},

{"question": "PLACEHOLDER",
     "categories": ["=============================== Python QUESTIONS ==============================================="],
     "answer": ""},
     {"question": "How do you check your version of python?",
     "categories": ["Python"],
     "answer": "python --version in the command line.  Python3 --version for the 3rd release."},
     {"question": "How do you view the install location of each version of python>",
     "categories": ["Python"],
     "answer": "which python.  Or which python3"},
     {"question": "How do you get the items in a python dictionary?",
     "categories": ["Python"],
     "answer": "the dictionary.items() method"},
     {"question": "How do you inspect the type of a python object?",
     "categories": ["Python"],
     "answer": "Call the type() function.  Not a method!"},
    {"question": "How do operators work with different data types?",
     "categories": ["Python"],
     "answer": ""},
     {"question": "How did you install a package with pip using python version 3.7?",
     "categories": ["Python"],
     "answer": "python3.7 -m pip install sklearn"},
     {"question": "What's the difference between with open('filename', 'w') as f: and 'a' in place of the 'w'?",
     "categories": ["Python"],
     "answer": "W will overwrite and a will append"},
     {"question": "What does inplace=true do?",
     "categories": ["Python"],
     "answer": "When inplace = True , the data is modified in place, which means it will return nothing and the dataframe is now updated. When inplace = False , which is the default, then the operation is performed and it returns a copy of the object. You then need to save it to something."},
    {"question": "Write an example df.rename method call.  Does this return anything after it's executed?",
     "categories": ["Python"],
     "answer": "train.rename(columns = {'lifetime_revenue': 'target'}, inplace=True)"},
     {"question": "How do you check the module versions?",
     "categories": ["Python"],
     "answer": "pip3 freeze | grep {package_name}"},
     {"question": "",
     "categories": ["Python"],
     "answer": ""},
     {"question": "",
     "categories": ["Python"],
     "answer": ""},
    {"question": "",
     "categories": ["Python"],
     "answer": ""},
     {"question": "",
     "categories": ["Python"],
     "answer": ""},
     {"question": "",
     "categories": ["Python"],
     "answer": ""},
     {"question": "",
     "categories": ["Python"],
     "answer": ""},
    {"question": "",
     "categories": ["Python"],
     "answer": ""},
     {"question": "",
     "categories": ["Python"],
     "answer": ""},
     {"question": "",
     "categories": ["Python"],
     "answer": ""},
     {"question": "",
     "categories": ["Python"],
     "answer": ""},
    {"question": "",
     "categories": ["Python"],
     "answer": ""},
     {"question": "",
     "categories": ["Python"],
     "answer": ""},
     {"question": "",
     "categories": ["Python"],
     "answer": ""},
     {"question": "",
     "categories": ["Python"],
     "answer": ""},
    {"question": "",
     "categories": ["Python"],
     "answer": ""},
     {"question": "",
     "categories": ["Python"],
     "answer": ""},
     {"question": "",
     "categories": ["Python"],
     "answer": ""},
     {"question": "",
     "categories": ["Python"],
     "answer": ""},

    {"question": "PLACEHOLDER",
     "categories": ["=============================== HTML QUESTIONS ==============================================="],
     "answer": ""},
     {"question": "How can you use HTML to redirect to a local port?",
     "categories": ["HTML"],
     "answer": "You can include a local port in the href attribute. <a href='http://localhost:8888'>Login to Spotify</a>"},
     {"question": "How do you add text that appears in a browser tab?",
     "categories": ["HTML"],
     "answer": "You can add a <title> element in the <head> section."},
     {"question": "What is the <g> element?",
     "categories": ["HTML"],
     "answer": "The <g> element is used to group svgs together. "},
     {"question": "",
     "categories": ["HTML"],
     "answer": ""},

    {"question": "PLACEHOLDER",
     "categories": ["=============================== CSS QUESTIONS ==============================================="],
     "answer": ""},
    {"question": "What does this CSS do and why is it useful in responsive design? * {box-sizing: border-box;}",
     "categories": ["CSS"],
     "answer": "It includes the padding and border in width and height of all elements.  If we set a width on an element, for instance 25%, we can add border or padding while ensuring it remains constant at 25%."},
    {"question": "What is the basic idea behind CSS? (one sentence)",
    "categories": ["CSS"],
    "answer": "In CSS you can use a selector to target an HTML element in the DOM (Document Object Model) and then apply a variety of attributes to that element to change the way it is displayed on the page."},
    {"question": "What are the three components of a hexadecimal color?  What is the lowest hexadecimal value and what color does it represent?",
     "categories": ["CSS"],
     "answer": "A hexadecimal color has three components - red, green, and blue.  Two hexadecimal digits represent each component from 00 - FF.  #000000 is the lowest value and represents black."
    },
    {"question": "Explain CSS variable cascading and why it is useful.",
    "categories": ["CSS"],
    "answer": "In CSS a variable is available for use in any elements nested within the element it was created in.  This effect is known as cascading.  CSS variables are often created in the :root element so they are available throughout the page."},
    {"question": "Explain the difference between a browser fallback and a variable fallback.",
    "categories": ["CSS"],
    "answer": "You can attach fallback values to CSS variables that they revert to if the initial value is invalid.  For instance: {background-color: var(--background-color, black)}.  When a browser parses your CSS it ignores any properties it does not support.  IE does not support variables.  A browser fallback is providing a more supported value immediately before your declaration, {background-color: black}, so the browser can fall back on it."},
    {"question": "Explain the difference between margin and padding.",
    "categories": ["CSS"],
    "answer": "Padding is the distance between an element's content and its border.  Margin is the distance between an element's border and other content."},
    {"question": "Explain the float property.",
    "categories": ["CSS"],
    "answer": "Floating elements are removed from the normal flow of a document. They are pushed to the left or right of their parent element."},
    {"question": "What does {font-size: 2em} mean?",
    "categories": ["CSS"],
    "answer": "em are relative size units.  If the default size on the page is 12px then 2em corresponds to 24px."},
    {"question": "What is a psuedo-class?",
    "categories": ["CSS"],
    "answer": "A psuedo-class is a specific keyword that can be added to a selector in order to select a specific state of an element.  For example we can apply the hover psuedo-class to change the CSS rules when the mouse hovers over an element."},
    {"question": "Explain the differences between relative, absolute, and fixed positioning",
    "categories": ["CSS"],
    "answer": "UNANSWERED"},
    {"question": "Explain how keyframes animations work.",
    "categories": ["CSS"],
    "answer": "A keyframes animation takes one or more properties and transitions it from a starting to end value over a set period of time.  For example we can change the background from yellow to blue in 3s.  Multiple properties "},
    {"question": "Explain how cubic-bezier curves and the cubic bezier function work.",
    "categories": ["CSS"],
    "answer": ""},
    {"question": "What is the difference between the container and container-fluid classes in Bootstrap?",
    "categories": ["CSS"],
    "answer": "The container class is intentionally not 100% width. It is different fixed widths depending on the width of the viewport. Container-fluid adjusts itself to the full width of the screen."},
    {"question": "In a responsive navigation bar give an example of how you might set margin and font-size for <li> elements.",
    "categories": ["CSS"],
    "answer": "{margin: 0 2vw; font-size: 3vh;} is a clean responsive design."},
    {"question": "How do you overwrite default CSS properties in React bootstrap classes?",
    "categories": ["CSS", "React"],
    "answer": "You can use inline CSS in the element itself.  Applying a default class will not work as the React Bootstrap class takes precedence."},
    {"question": "How do you display a list horizontally?",
    "categories": ["CSS"],
    "answer": "li {display: inline;}"},
    {"question": "How do you import google fonts in a React App?",
    "categories": ["CSS", "React"],
    "answer": "Add the following to the top of a CSS file: @import url('https://fonts.googleapis.com/css?family=Josefin+Sans');.  Be sure to specify the correct names."},
    {"question": "What property adds spacing between letters?  Where does this effect look nice?",
    "categories": ["CSS"],
    "answer": "{letter-spacing: 2px}.  This effect looks nice on large buttons with a small amount of text. It fits the text to its container without adding verbosity."},
    {"question": "How do you justify the text to the left in an unordered list?",
    "categories": ["CSS"],
    "answer": "ul {text-align: left}"},
    {"question": "What value of the letter-spacing property makes an h1 element look cleaner?",
    "categories": ["CSS"],
    "answer": "Adding letter-spacing: -1px or -.02em can make an h1 header look more compact / cleaner."},
    {"question": "",
    "categories": ["CSS"],
    "answer": ""},
    {"question": "",
    "categories": ["CSS"],
    "answer": ""},
    {"question": "",
    "categories": ["CSS"],
    "answer": ""},
    {"question": "",
    "categories": ["CSS"],
    "answer": ""},
    {"question": "",
    "categories": ["CSS"],
    "answer": ""},
    {"question": "",
    "categories": ["CSS"],
    "answer": ""},
    {"question": "",
    "categories": ["CSS"],
    "answer": ""},
    {"question": "",
    "categories": ["CSS"],
    "answer": ""},
    {"question": "",
    "categories": ["CSS"],
    "answer": ""},
    {"question": "",
    "categories": ["CSS"],
    "answer": ""},

    {"question": "PLACEHOLDER",
    "categories": ["=============================== Sass QUESTIONS ==============================================="],
    "answer": ""},
    {"question": "What is Sass?",
    "categories": ["Sass"],
    "answer": "Syntactically Awesome StyleSheets is a language extension of CSS. It adds features that aren't available using basic CSS syntax. Sass makes it easier for developers to simplify and maintain the style sheets for their projects."},
    "answer": ""},

    {"question": "PLACEHOLDER",
    "categories": ["=============================== JavaScript QUESTIONS ==============================================="],
    "answer": ""},
    {"question": "How do you return the nth character in a string variable?",
    "categories": ["JavaScript"],
    "answer": "With bracket notation.  For instance varName[0] would return the first character."},
    {"question": "Explain string immutability in JavaScript.",
    "categories": ["JavaScript"],
    "answer": "Individual characters in a string literal cannot be altered.  For instance the first character in a string can't be re-assigned.  However you can re-assign the value of a string variable by assigning it to a new string."},
    {"question": "What 4 array methods add / remove values from the beginning and end of arrays? Do these methods manipulate the original object or return a new object?",
    "categories": ["JavaScript"],
    "answer": ".push adds a value to the end, .pop removes a value from the end, .shift removes a value from the beginning, and .unshift adds a value to the beginning.  All of these methods manipulate the original array."},
    {"question": "Explain the concept of scope.",
    "categories": ["JavaScript"],
    "answer": "Scope refers to the visibility of variables - or the scope of a variable is where you can access it. Variables which are defined outside of a function block have Global scope."},
    {"question": "In a function body what takes precedence - local or global scope?",
    "categories": ["JavaScript"],
    "answer": "Local scope takes precedence. If two variables share the same name the function will call the local one."},
    {"question": "What is the difference between the comparison operator and the strict comparison operator?",
    "categories": ["JavaScript"],
    "answer": "The comparison operator (==) uses type coercion to attempt to convert values to a common type before comparison.  The strict comparison operator (===) doesn't do this and returns false if the compared values have different types."},
    {"question": "Name 3 ways you can access an object's property.  Let's say obj = {'dog': 'golden retriever'};",
    "categories": ["JavaScript"],
    "answer": "You can use dot notation: obj.dog, bracket notation: obj['dog'], and finally using a variable: var animal = 'dog'; obj[animal];"},
    {"question": "How do you do delete a property from an object?  Lets use obj = {'dog': 'golden retriever'};",
    "categories": ["JavaScript"],
    "answer": "delete obj.dog;"},
    {"question": "What method can you call to test if an object has a specific property?",
    "categories": ["JavaScript"],
    "answer": "obj.hasOwnProperty(propname)"},
    {"question": "What is the for loop syntax in JS?",
    "categories": ["JavaScript"],
    "answer": "for (var i=0; i<5, i++) {\n   console.log(i);\n}"},
    {"question": "Explain how the ternary operator works",
    "categories": ["JavaScript"],
    "answer": "The ternary operator evaluates a conditional, then performs one action if it's true and another if it's false.  It's shorthand syntax for a simple if-else block.  You can also chain them together to evaluate multiple conditions."},
    {"question": "What are the differences in scope between var and let?",
    "categories": ["JavaScript"],
    "answer": "Var has global scope if declared outside a function - or locally if inside a function.  Let's scope is limited to the block, expression, or statement it's declared in.  "},
    {"question": "Can you mutate variables declared with const?",
    "categories": ["JavaScript"],
    "answer": "Yes, for instance you can mutate individual values in an array declared with const.  You cannot, however, reassign a variable declared with const."},
    {"question": "Write an arrow function with no function body",
    "categories": ["JavaScript"],
    "answer": "const myFunc = () => 'value'"},
    {"question": "What is the spread operator?",
    "categories": ["JavaScript"],
    "answer": "..., or the spread operator, allows us to expand arrays and other expressions in places where multiple parameters or elements are expected"},
    {"question": "What is the rest operator?",
    "categories": ["JavaScript"],
    "answer": "The rest operator, or function(...args), allows us to pass a multiple number of arguments to a function."},
    {"question": "What three methods are useful for reversing a string?  Hint: one str and two arr.",
    "categories": ["JavaScript"],
    "answer": "str.split(''), arr.reverse(), and arr.join('')"},
    {"question": "What does debugger do?",
    "categories": ["JavaScript"],
    "answer": "Writing debugger; creates a breakpoint in the call stack.  It will pause the stack and allow you to inspect the environment at that point."},
    {"question": "What is TypeScript?",
    "categories": ["JavaScript"],
    "answer": "Typescript is a strict, typed superset of Javascript developed by Microsoft."},
    {"question": "What is the benefit of using static types in TypeScript?",
    "categories": ["JavaScript"],
    "answer": "Static types allow you to assign a type to a function parameter.  For example: function addFive(num: number) return num + 5;  This catches type coercion errors."},
    {"question": "What does AJAX stand for?",
    "categories": ["JavaScript"],
    "answer": "Asynchronous JavaScript And XML. AJAX is a misleading name. AJAX applications might use XML to transport data, but it is equally common to transport data as plain text or JSON text."},
    {"question": "In the fetch API how can we call 'this' in .then methods?",
    "categories": ["JavaScript"],
    "answer": "If we use arrow functions then this is set to the global object (App in React - which is useful), then we can call this.setState()."},
    {"question": "What is a Promise object?",
    "categories": ["JavaScript"],
    "answer": "The Promise object represents the eventual completion (or failure) of an asynchronous operation, and its resulting value."},
    {"question": "What are the 3 possible states of a Promise?",
    "categories": ["JavaScript"],
    "answer": "Pending, fulfilled, rejected."},
    {"question": "How do you redirect to a different HTTP url inside of a function?",
    "categories": ["JavaScript"],
    "answer": "You can use the window method: window.location.replace('url')"},
    {"question": "What is the constructor() method in ES6 classes? What is the super() method? What are the parent and superclasses in 'class Sales extends EventEmitter'?",
    "categories": ["JavaScript"],
    "answer": "The constructor method is a function that runs each time a new object instance is created from a class. Super() gives us access to all the methods in the parent class. Sales is the parent class and EventEmitter is the super class."},
    {"question": "What does the double bang do?",
    "categories": ["JavaScript"],
    "answer": "It returns a variable's truthy value.  This is useful for converting a variable to a boolean in conditionals."},
    {"question": "",
    "categories": ["JavaScript"],
    "answer": ""},
    {"question": "",
    "categories": ["JavaScript"],
    "answer": ""},
    {"question": "",
    "categories": ["JavaScript"],
    "answer": ""},
    {"question": "",
    "categories": ["JavaScript"],
    "answer": ""},
    {"question": "",
    "categories": ["JavaScript"],
    "answer": ""},
    {"question": "",
    "categories": ["JavaScript"],
    "answer": ""},

    {"question": "PLACEHOLDER",
    "categories": ["=============================== jQuery QUESTIONS ==============================================="],
    "answer": ""},
    {"question": "How does the document ready ($(document).ready(function() {}) function work?",
    "categories": ["jQuery"],
    "answer": "The code you wrap in this function runs as soon as the page loads. Without the document ready function the code may run before the HTML is rendered."},
    {"question": "What are the two names for the '$' in jQuery?",
    "categories": ["jQuery"],
    "answer": "The dollar sign operator or bling."},
    {"question": "How do you select multiple elements using the bling operator?",
    "categories": ["jQuery"],
    "answer": "Separate them with commas.  Ex: $('i, button')"},
    {"question": "How do you change the CSS of an element using jQuery?",
    "categories": ["jQuery"],
    "answer": "We can use the .css() method.  Ex: $('#target1').css('color', 'blue');"},
    {"question": "How do you access the properties of an element?",
    "categories": ["jQuery"],
    "answer": ""},
    {"question": "",
    "categories": ["jQuery"],
    "answer": ""},

    {"question": "PLACEHOLDER",
    "categories": ["=============================== React QUESTIONS ==============================================="],
    "answer": ""},
    {"question": "How do you pass an event handler from a class component to a stateless component?",
    "categories": ["React"],
    "answer": "Pass it in as props to the stateless component, then "},
    {"question": "How do you add a package to a create-React app?",
    "categories": ["React"],
    "answer": "1. npm install --save font-awesome 2. Add import 'font-awesome/css/font-awesome.min.css' to the index.js file"},
    {"question": "Name the 3 basic exports from React-bootstrap.",
    "categories": ["React"],
    "answer": "<Container>, <Row>, <Col> are exported as stateless componenets. "},
    {"question": "How do you create a fluid Container in React-bootstrap?  What about an xs column that spans 6/12 possible columns?",
    "categories": ["React"],
    "answer": "<Container fluid={true}></Container>.  <Col xs={6}></Col>"},
    {"question": "What is a higher order component in React?",
    "categories": ["React"],
    "answer": "A higher-order component is a function that takes a component and returns a new component."},
    {"question": "What attribute do you add to a React <Col> element to make it auto-size to fit the size of its content?",
    "categories": ["React"],
    "answer": "<Col xs='auto'></Col>"},
    {"question": "What are the three steps to deploying a React-app with GH pages? ",
    "categories": ["React"],
    "answer": "Add a homepage URL to the package.json file, install the gh-pages packag with npm, and add predeploy: npm run build and deploy: gh-pages-d build to the scripts object in the package.json file."},
    {"question": "What is a React Hook?",
    "categories": ["React"],
    "answer": "Hooks are functions that let you “hook into” React state and lifecycle features from function components. Hooks don’t work inside classes — they let you use React without classes."},
    {"question": "Where can you call hooks?",
    "categories": ["React"],
    "answer": "Only call Hooks at the top level. Don’t call Hooks inside loops, conditions, or nested functions. Only call Hooks from React function components."},
    {"question": "How do you attach multiple callback functions to an event listener?",
    "categories": ["React"],
    "answer": "You can combine them inline like this: onClick={() => {this.toggleClass(); this.props.addTopic();} You can also create a separate class method that calls both callbacks, then simply call that method instead."},
    {"question": "Can svg text be valid JSX?",
    "categories": ["React"],
    "answer": "Yes the proper camel casing just needs to be applied to the inline svg text.  There are online converters that make it easy."},
    {"question": "What is lazy loading?",
    "categories": ["React"],
    "answer": "Load the components that are required first and load the others when they are required."},
    {"question": "How do you access a component's state in the console?",
    "categories": ["React"],
    "answer": "If you use the React developer tools extension and select a component you can then call it in the console with '$r'.  Then you call any method you want, such as $r.state."},
    {"question": "How do you dynamically generate JSX with map?",
    "categories": ["React"],
    "answer": "You can return JSX directly with map. There is no need to use a string or a template literal."},
    {"question": "How do you enable the React Tabs API?",
    "categories": ["React", "CSS"],
    "answer": "You import the Tab and Tabs classes from the react-bootstrap module.  You also need to import the latest version of bootstrap because it uses the bootstrap classes. 'import 'bootstrap/dist/css/bootstrap.min.css';'"},
    {"question": "What attribute makes react Tab elements active?",
    "categories": ["React"],
    "answer": "A unique eventkey attribute has to be included in order to use the tabs / display their content."},
    {"question": "What property sets the size of React Col and Row components?",
    "categories": ["React", "Bootstrap"],
    "answer": "the xs property sets this.  For instance <Col xs={12}> will make the column span an entire row."},
    {"question": "",
    "categories": ["React"],
    "answer": ""},
    {"question": "",
    "categories": ["React"],
    "answer": ""},
    {"question": "",
    "categories": ["React"],
    "answer": ""},
    {"question": "",
    "categories": ["React"],
    "answer": ""},

    {"question": "PLACEHOLDER",
    "categories": ["=============================== Node.js QUESTIONS =============================================="],
    "answer": ""},
    {"question": "What is node.js in one sentence?",
    "categories": ["Node.js"],
    "answer": "Node.js is a JavaScript tool that allows developers to write backend (server-side) programs in JavaScript"},
    {"question": "What is Express (hint: module)",
    "categories": ["Node.js"],
    "answer": "Express is a module often used with node. Express runs between the server created by Node.js and the frontend pages of a web application. Express also handles an application's routing. Routing directs users to the correct page based on their interaction with the application"},
    {"question": "What does the following Express method do? app.listen(port)",
    "categories": ["Node.js", "Express"],
    "answer": "It tells your server to listen on a given port, putting it in running state."},
    {"question": "Explain each part of this working Express server app.get('/', (req, res) => {res.send('Hello Express');});",
    "categories": ["Node.js", "Express"],
    "answer": "get is an HTTP method. The arguments to get are a relative file path on the server, and a handler function that takes the form: function(req, res). When a user makes a GET request to root, the handler function will be called and serve the response string: Hello Express."},
    {"question": "What response method should we use to serve an HTML file in response to an HTTP GET request?  What global variable might be helpful as an argument?",
    "categories": ["Node.js", "Express"],
    "answer": "The res.sendFile() method in the handler.  Using a global variable like __dirname is helpful in constructing an absolute file path. Example:     app.get('/', (req, res) => {res.sendFile(__dirname + '/views/index.html');});"},
    {"question": "What are some examples of static assets?",
    "categories": ["Node.js", "Express"],
    "answer": "Images, scripts and styles are static assets.  Middleware functions can add static assets to route handlers."},
    {"question": "What does the following middleware do?  What does the absence of the first argument (path) imply? \n app.use(express.static(__dirname + '/public'));",
    "categories": ["Node.js", "Express"],
    "answer": "The middleware function express.static loads the static asses in the __dirname + '/public' folder on a request.  The absence of path as the first argument in app.use means it will executer for every request - not just for one API endpoint."},
    {"question": "What does REST API stand for?  How does it transfer data?",
     "categories": ["Node.js", "Express"],
    "answer": "Rest stands for REpresentational State Transfer.  They're useful because the client doesn't need any details about the server.  To transfer data the client needs to know the endpoint (url) and the action it wants to perform (get, req, etc.)"},
    {"question": "How would you write a REST API using Express to serve the object: {'message': 'I love these flashcards!'} at the endpoint /json?",
     "categories": ["Node.js", "Express"],
    "answer": "app.get('/json', (req, res) {\n   res.json({'message': 'I love these flashcards!'})\n});"},
    {"question": "Is it safe to store private data in the .env file? How do you access a variable from this file in the app?  It's a shell file - what does this mean for variable declarations?",
     "categories": ["Node.js", "Express"],
    "answer": "Yes - the .env file is hidden and  only accessbile to you - it's useful for API keys and config options.  You access a variable with this syntax: process.env.VAR_NAME.  Shell files don't allow spaces in variable declarations: MY_VAR=5"},
    {"question": "What are the three parameters to a middleware function?",
     "categories": ["Node.js", "Express"],
    "answer": "the request object, the response object, and the next function in the application’s request-response cycle"},
    {"question": "What happens when a middleware function doesn't call next()?",
     "categories": ["Node.js", "Express"],
    "answer": "If the middleware function doesn't end the request-response cycle it must call next() otherwise it will be left hanging.  A middleware function that ends the cycle does not need to call next."},
    {"question": "What happens when you mount the following middleware function on a route? function(req, res, next) {\n   console.log(I'm a middleware...');\n   next();\n}",
     "categories": ["Node.js", "Express"],
    "answer": "When a request matches the route, it displays the string “I’m a middleware…”. Then it executes the next function in the stack."},
    {"question": "What's the advantage of chaining middleware?",
     "categories": ["Node.js", "Express"],
    "answer": "Chaining middleware splits operations into smaller chunks which creates more reusable code and better app structure.  You can also perform data validation steps and if neceessary block the execution of the current chain and pass control to functions specifically designed to handle errors."},
    {"question": "What are API route parameters?  Where can you access their values in a middleware function?  Write a route parameter that accepts a userID parameter.",
     "categories": ["Node.js", "Express"],
    "answer": "Route parameters are named segments of the URL, delimited by slashes (/). Each segment captures the value of the part of the URL which matches its position. The captured values can be found in the req.params object. path: /user/:userID/ request: /user/546, response: {userId: '546'}"},
    {"question": "What does chaining multiple verb handlers on a route path mean?",
     "categories": ["Node.js", "Express"],
    "answer": "We can chain multiple handlers to one route using the following syntax: app.route(path).get(handler).post(handler).  This creates more concise code by attaching a GET and POST handler to one path, rather than two separate route + get and route + post functions."},
    {"question": "What syntax does an API endpoint use to receive query parameter input?",
     "categories": ["Node.js", "Express"],
    "answer": "The query string, after the endpoint, is delimited by a question mark (?), and includes field=value couples. Each couple is separated by an ampersand (&)."},
    {"question": "What is the POST method?",
     "categories": ["Node.js", "Express"],
    "answer": "POST is the default method used to send client data with HTML forms. In the REST convention POST is used to send data to create new items in the database (a new user, or a new blog post)"},
    {"question": "What does the following code do? const express = require('express')\nconst app = express();\napp.get('/', (req, res) => {\nres.send('Hello World!')\n});\napp.listen(8000, () => {\nconsole.log('Example app listening on port 8000!')\n});",
     "categories": ["Node.js", "Express"],
    "answer": "This code shows a minimal 'HelloWorld' Express web application. This imports the 'express' module using require() and uses it to create a server (app) that listens for HTTP requests on port 8000 and prints a message to the console explaining what browser URL you can use to test the server. The app.get() function only responds to HTTP GET requests with the specified URL path ('/'), in this case by calling a function to send our Hello World! message."},
    {"question": "How do you run a node.js express server from the command line?",
     "categories": ["Node.js", "Express"],
    "answer": "node server.js (or the name of the entry point file)."},
    {"question": "Where does the console.log command display?  Where can you access port 8000?\napp.listen(8000, () => {\nconsole.log('Example app listening on port 8000!')\n});",
     "categories": ["Node.js", "Express"],
    "answer": "The console.log displays in the terminal if you initiate the server from there. You can access port 8000 in your web browswer at http://127.0.0.1:8000/."},
    {"question": "When supplying a path to a static asset in an entry point what's the difference between serving it with an app like Express vs. loading it in a IDE?",
     "categories": ["Node.js", "Express"],
    "answer": "If you use express to load static assets you only need to reference the file name in the link.  In an IDE (Brackets) you need the absolute file path."},
    {"question": "How do you enable CORS on all requests?",
     "categories": ["Node.js", "Express"],
    "answer": "If we're using the CORS package with an Express server then the following enables CORS: var express = require('express')\nvar cors = require('cors')\nvar app = express()\napp.use(cors())"},
    {"question": "How do you enable CORS on a single route?",
     "categories": ["Node.js", "Express"],
    "answer": "We can pass it in as an optional argument to a route handler.  'app.get('/products/:id', cors(), function (req, res, next) {'"},
    {"question": "Explain the concept of routing.",
     "categories": ["Node.js", "Express"],
    "answer": "Routing refers to determining how an application responds to a client request to a particular endpoint, which is a URI (or path) and a specific HTTP request method (GET, POST, and so on)."},
    {"question": "What does the app.use() method do?",
     "categories": ["Node.js", "Express"],
    "answer": "Mounts the specified middleware function or functions at the specified path: the middleware function is executed when the base of the requested path matches path. If you don't specify a path it applies to all paths."},
    {"question": "How can you use Express.Router() to modularize your application?",
     "categories": ["Node.js", "Express"],
    "answer": "A router instance can handle multiple routes - for instance /about and /contact.  The router can then be applied to a default endpoint like /me. App.use('/me', router) will apply the first two endpoints the /me route."},
    {"question": "Does order matter when using middleware?",
     "categories": ["Node.js", "Express"],
    "answer": "Yes, if you define middleware after a route handler then the handler will not have access to it. "},
    {"question": "In middle can you modify the request and response objects?",
     "categories": ["Node.js", "Express"],
    "answer": "Yes you can modify them.  For instance you can add properties to an object.  For instance 'req.name = John'.  You can then access req.name in subsequent middleware or route handlers."},
    {"question": "What is a JavaScript runtime?",
     "categories": ["Node.js", "Express"],
    "answer": "The browser and Node.js are JavaScript runtime. It is a container in which a program written in JS can be executed. Google's V8 engine run JS in node."},
    {"question": "What is blocking code?",
     "categories": ["Node.js", "Express"],
    "answer": "Blocking code is synchronous code because each call must complete before the next call is invoked."},
    {"question": "What is a Single Thread?",
     "categories": ["Node.js", "Express"],
    "answer": "A thread is a set of instructions that is run in the computer's processor.  In node each application is a single thread.  All the users for an app access the same thread. Asynchronous code is necessary so one user doesn't block the whole thread."},
    {"question": "In node what are typically the first two arguments to an asynchronous callback function?",
     "categories": ["Node.js", "Express"],
    "answer": "The first two parameters are usually the error and the data."},
    {"question": "What is the standard IP address for a local host?",
     "categories": ["Node.js", "Express"],
    "answer": "127.0.0.1"},
    {"question": "What does the __dirname variable in node let you access?",
     "categories": ["Node.js", "Express"],
    "answer": "The dir variable refers to the current directory in which the script is being executed."},
    {"question": "What happens when you type a URL into a webpage?",
     "categories": ["Node.js", "Express", "Miscellaneous"],
    "answer": "The browser (client) sends a request to where the webpage is hosted. The server sends back a response that contains the webpage.  This is the request-response model or Client-server architecture."},
    {"question": "Give examples of protocol, domain name, and maps in a URL.",
     "categories": ["Node.js", "Express", "Miscellaneous"],
    "answer": "http:// is the protocol, google.com is the domain name, resource is /maps."},
    {"question": "What is a DNS lookup?",
     "categories": ["Node.js", "Express", "Miscellaneous"],
    "answer": "A DNS lookup converts a string like 'google.com' to its real IP address 216.58.211.206 and port :443.  This happens through your ISP (Internet Service Provider)"},
    {"question": "What are TCP and IP?",
     "categories": ["Node.js", "Express", "Miscellaneous"],
    "answer": "TCP is Transmission Control Protocol and IP is Internet Protocol. "},
    {"question": "What happens when you type in a URL in a browswer?",
     "categories": ["Node.js", "Express"],
    "answer": "A DNS lookup, a TCP/IP connection, an HTTP request, HTTP response"},
    {"question": "What are the 3 parts of an HTTP request?",
     "categories": ["Node.js", "Miscellaneous"],
    "answer": "The start line - which is the HTTP method, request target and HTTP version, request headers, and an optional body if data is being sent."},
    {"question": "What information can you get about an HTTP method in the network tab?",
     "categories": ["Node.js", "Express"],
    "answer": "You can look at the headers which includes the request / response information.  The preview tab shows you what it looks like.  The response tab can you show HTML / CSS. The cookies tab shows which cookies were set."},
    {"question": "What is the simplest back-end server?",
     "categories": ["Node.js", "Express"],
    "answer": "A computer that is connected to an internet that contains all the front-end files and runs an HTTP server. It's a static server."},
    {"question": "What is the difference between a static and dynamic website?",
     "categories": ["Node.js", "Miscellaneous"],
    "answer": "A static website is JS, CSS, and HTML - there's no backend. A dynamic website has a database that an app pulls data from and dynamically generates pages using a template.  This is server side rendering."},
    {"question": "What's the difference between server side rendered and client side rendered?",
     "categories": ["Node.js", "Express"],
    "answer": "An API based website pulls data and builds the website on the client side.  A dynamic website pulls data from its db, renders it on the server, then sends it to the browswer."},
    {"question": "Explain the node architecture/",
     "categories": ["Node.js"],
    "answer": "The V8 converts the JS code into machine code that a server can understand.  libuv gives node the access to the file system, event loop, and thread pool.  libuv is written in C++."},
    {"question": "When a node.js process (instance of program execution) occurs, what happens in the single thread?",
     "categories": ["Node.js", "Express"],
    "answer": "Initalize program, execute top level code, require modules, register callback events, and finally the event loop starts.  Libuv as initializes 4 additional thread pools - the event loop can decide to put costly events in the additional loops."},
    {"question": "What order do events get called in the event loop?",
     "categories": ["Node.js", "Express"],
    "answer": "Expired timer callbacks (setTimeout), I/O polling and callbacks (file access and networking 99.9% of node code), set immediate callbacks (a timer that can be set after I/O), close callbacks (web server / socket shutdown)."},
    {"question": "When does the microtasks queue get executed?",
     "categories": ["Node.js", "Express"],
    "answer": "After the end of each phase.  Any process.nextTick() calls or resolved promises can occur after a the expired timer callbacks phase, I/O, setImmediate, and close callbacks."},
    {"question": "How do you change the size of the thread pool?",
     "categories": ["Node.js", "Express"],
    "answer": "process.env.UV_THREADPOOL_SIZE = 1;"},
    {"question": "Explain event-driven architecture in node.",
     "categories": ["Node.js", "Express"],
    "answer": "An event emitter will emit an event that's caught by an event listener which then calls a callback function."},
    {"question": "What is the observer pattern?",
     "categories": ["Node.js", "Express"],
    "answer": "The event listener (observer) is continuously observing the subject that eventually emits an event. The opposite of this pattern is functions calling other functions. The advantage to this is decoupling modules."},
    {"question": "What is a stream?",
     "categories": ["Node.js", "Express"],
    "answer": "Processing the data piece by piece so the whole file doesn't need to be stored in memory.  For instance netflix or youtube. Streams are good for handling large volumes of data."},
    {"question": "What are the four types of streams in node.js?",
     "categories": ["Node.js", "Express"],
    "answer": "Readable - we can consume data (http req, fs read streams), writable (http responses, fs write), duplex (read and writable - web socket), and transform (duplex streams that can modify data)."},
    {"question": "What is back pressure? What is the solution to this?",
     "categories": ["Node.js", "Express"],
    "answer": "When the response can't send the data as fast as it is receiving it. The solution is using the pipe method."},
    {"question": "What do you pass into a new instance of a Promise?",
     "categories": ["Node.js", "Express"],
    "answer": "A new Promise instance takes an executor function.  The executor function has two parameters - resolve and reject, which are functions that are called if the promise was succesfull or unsuccessful - respectively. "},
    {"question": "",
     "categories": ["Node.js", "Express"],
    "answer": ""},

    {"question": "PLACEHOLDER",
    "categories": ["=============================== MongoDB QUESTIONS =============================================="],
    "answer": ""},
    {"question": "What is MongoDB?",
     "categories": ["MongoDB"],
    "answer": "MongoDB is a database that stores data records (documents) for use by an application. Mongo is a non-relational, 'NoSQL' database. This means Mongo stores all data associated within one record, instead of storing it across many preset tables as in a SQL database."},
    {"question": "One of the benefits of MongoDB is flexibility: what does this mean?",
     "categories": ["MongoDB"],
    "answer": "Flexibility: new datasets and properties can be added to a document without the need to make a new table for that data."},
    {"question": "One of the benefits of MongoDB is scalability: what does this mean?",
     "categories": ["MongoDB"],
    "answer": "Scalability: by default, non-relational databases are split (or 'shared') across many systems instead of only one. This makes it easier to improve performance at a lower cost."},
    {"question": "One of the benefits of MongoDB is replication: what does this mean?",
     "categories": ["MongoDB"],
    "answer": "Replication: copies of the database run in parallel so if one goes down, one of the copies becomes the new primary data source."},
    {"question": "What is mongoose.js?",
     "categories": ["MongoDB"],
    "answer": "Mongoose.js is an npm module for Node.js that allows you to write objects for Mongo as you would in JavaScript. This can make it easier to construct documents for storage in Mongo"},
    {"question": "What is MongoDB atlas?",
     "categories": ["MongoDB"],
    "answer": "MongoDB Atlas is a MongoDB Database-as-a-Service platform, which basically means that they configure and host the database for you, making it so that the only responsibility you have is to populate your database"},
    {"question": "Explain IP whitelisting",
     "categories": ["MongoDB"],
    "answer": "IP whitelisting allows you to create lists of trusted IP addresses or IP ranges from which your users can access your domains."},
    {"question": "How do you connect to a mongo database using an express server hosted on node.js?",
     "categories": ["MongoDB"],
    "answer": "Install the mongoose and mondodb dependences using npm.  Store the server URI + password in the .env file.  Require mongoose and then connect to the db using mongoose.connect(server_uri)"},
    {"question": "Explain validation in mongoose.",
     "categories": ["MongoDB"],
    "answer": "Validation is defined in the SchemaType.  Validation is middleware. Mongoose registers validation as a pre('save') hook on every schema by default. Validators are not run on undefined values. The only exception is the required validator."},
    {"question": "How do you add a validator to a field in a Schema?",
     "categories": ["MongoDB"],
    "answer": "Set the value in the key-value pair in the Schema to an object with properties 'type' and a validation property such as 'required: true'."},
    {"question": "What's special about array default values?",
     "categories": ["MongoDB"],
    "answer": "Arrays are special because they implicitly have an empty array set as their default value."},
    {"question": "What are documents and models in mongoose?",
     "categories": ["MongoDB"],
    "answer": "Document and Model are distinct classes in Mongoose. The Model class is a subclass of the Document class. When you use the Model constructor, you create a new document. In Mongoose, a 'document' generally means an instance of a model. You should not have to create an instance of the Document class without going through a model"},
    {"question": "What does CRUD stand for? ",
     "categories": ["MongoDB"],
    "answer": "create, read, update, and delete (CRUD) are the four basic functions of persistent storage."},
    {"question": "Why is model.findById() useful?",
     "categories": ["MongoDB"],
    "answer": "When saving a document, mongodb automatically adds the field _id, and set it to a unique alphanumeric key. Searching by _id is an extremely frequent operation, so moongose provides a dedicated method for it."},
    {"question": "",
     "categories": ["MongoDB"],
    "answer": ""},
    {"question": "",
     "categories": ["MongoDB"],
    "answer": ""},
    {"question": "",
     "categories": ["MongoDB"],
    "answer": ""},
    {"question": "",
     "categories": ["MongoDB"],
    "answer": ""},
    {"question": "",
     "categories": ["MongoDB"],
    "answer": ""},
    {"question": "",
     "categories": ["MongoDB"],
    "answer": ""},
    {"question": "",
     "categories": ["MongoDB"],
    "answer": ""},

    {"question": "PLACEHOLDER",
    "categories": ["=============================== NPM QUESTIONS ==============================================="],
    "answer": ""},
    {"question": "What is npm?",
     "categories": ["npm"],
    "answer": "Node Package Manager (npm) is a command-line tool used by developers to share and control modules (or packages) of JavaScript code written for use with Node.js"},
    {"question": "What does the package.json file do in npm?",
     "categories": ["npm"],
    "answer": "This file lists the package dependencies for your project. Since npm packages are regularly updated, the package.json file allows you to set specific version numbers for each dependency."},
    {"question": "How do you enable the ion-icons library?",
     "categories": ["npm"],
    "answer": "npm install --save ionicons.  Then place the following script tag (with an updated version #) in your entry point file to enable them: <script src='https://unpkg.com/ionicons@4.5.9-1/dist/ionicons.js'> "},
    {"question": "How do you show the latest version of a package?",
     "categories": ["npm"],
    "answer": "npm show {packageName} version"},
    {"question": "What is the shorthand for npm install?  What does adding the -g argument do? ",
     "categories": ["npm"],
    "answer": "npm i.  Adding the -g argument installs the package globally."},
    {"question": "What does the body-parser module do?",
     "categories": ["npm"],
    "answer": "Parse incoming request bodies in a middleware before your handlers, available under the req.body property.  For instance you can call app.use(bodyParser.json()); to parse req objects to json."},
    {"question": "What does the morgan module do?",
     "categories": ["npm"],
    "answer": "HTTP request logger middleware for node.js.  I have specifically only used app.use(morgan), which pretty prints error messages, etc."},
    {"question": "What does the request module in npm do?",
     "categories": ["npm"],
    "answer": "Request is designed to be the simplest way possible to make http calls. It supports HTTPS and follows redirects by default."},
    {"question": "What module lets you read and write files?",
     "categories": ["npm"],
    "answer": "The fs module."},
    {"question": "How do you remove a module?",
     "categories": ["npm"],
    "answer": "npm uninstall <module_name>"},
    {"question": "",
     "categories": ["npm"],
    "answer": ""},

    {"question": "PLACEHOLDER",
    "categories": ["=============================== Apache Cordova QUESTIONS ==============================================="],
    "answer": ""},
    {"question": "What is Apache Cordova?",
     "categories": ["Cordova"],
    "answer": "Apache Cordova is an open-source mobile development framework. It allows you to use standard web technologies - HTML5, CSS3, and JavaScript for cross-platform development. Applications execute within wrappers targeted to each platform, and rely on standards-compliant API bindings to access each device's capabilities such as sensors, data, network status, etc."},
    {"question": "How do you see installed and available platforms?",
     "categories": ["Cordova"],
    "answer": "cordova platform ls"},
    {"question": "What does the cordova create command do?",
     "categories": ["Cordova"],
    "answer": "By default, cordova create script generates a skeletal web-based application whose start page is the project's www/index.html file. Any initialization should be specified as part of the deviceready event handler defined in www/js/index.js"},
    {"question": "",
     "categories": ["Cordova"],
    "answer": ""},

    {"question": "PLACEHOLDER",
    "categories": ["=============================== AWS QUESTIONS ==============================================="],
    "answer": ""},
    {"question": "What is the Elastic Beanstalk service?",
     "categories": ["AWS"],
    "answer": "With Elastic Beanstalk, you can deploy, monitor, and scale an application quickly and easily"},
    {"question": "What is the Amazon RDS service?",
     "categories": ["AWS"],
    "answer": "Amazon Relational Database Service."},

    {"question": "PLACEHOLDER",
    "categories": ["=============================== Redux QUESTIONS =============================================="],
    "answer": ""},
    {"question": "What is Redux?",
     "categories": ["Redux"],
    "answer": "Redux is a state management framework. In Redux, there is a single state object that's responsible for the entire state of your application. The unidirectional data flow makes it easier to track state management in your app."},
    {"question": "What is the Redux store?  How do you initialize it?  What do you pass in as an argument?",
     "categories": ["Redux"],
    "answer": "The store is the object that holds state. The Redux.createStore method initializes it.  It takes a reducer function as input."},
    {"question": "What method do you use to retrieve state?",
     "categories": ["Redux"],
    "answer": "Call getState() on the Redux store object."},
    {"question": "What is an action?",
     "categories": ["Redux"],
    "answer": "An action is simply a JavaScript object that contains information about an action event that has occurred. Actions must carry a type property that specifies the 'type' of action that occurred.  They can also contain optional data."},
    {"question": "What is an action creator?",
     "categories": ["Redux"],
    "answer": "A JavaScript function that returns an action object."},
    {"question": "How do you pass an action event to the store?",
     "categories": ["Redux"],
    "answer": "The dispatch method."},
    {"question": "What is the role of a reducer function?",
     "categories": ["Redux"],
    "answer": "After an action event is dispatched to the store a reducer function handles it. A reducer takes state and action as arguments, and it always returns a new state.  This is the only role of reducer functions."},
    {"question": "What is the store.subscribe method?",
     "categories": ["Redux"],
    "answer": "This allows you to subscribe listener functions to the store, which are called whenever an action is dispatched against the store. One simple use for this method is to subscribe a function to your store that simply logs a message every time an action is received and the store is updated."},
    {"question": "How does the combineReducers method work?",
     "categories": ["Redux"],
    "answer": "It takes key-value pairs of reducer functions and merges then into one reducer.  It then returns a state object with the keys as state names and the output of the individual reducers as values."},
    {"question": "Explain the concept of middleware in Redux.",
     "categories": ["Redux"],
    "answer": "It provides a third-party extension point between dispatching an action, and the moment it reaches the reducer. People use Redux middleware for logging, crash reporting, talking to an asynchronous API, routing, and more."},
    {"question": "Where do you intialize state in Redux?",
     "categories": ["Redux"],
    "answer": "It's the first parameter in the reducer function.  You can initialize it by setting a default value."},
    {"question": "What does the Provider API from the react-redux package do?",
     "categories": ["Redux"],
    "answer": "Provider is a wrapper component from React Redux that wraps your React app. This wrapper then allows you to access the Redux store and dispatch functions throughout your component tree."},
    {"question": "What do mapStateToProps() and mapDispatchToProps() and do?",
     "categories": ["Redux"],
    "answer": "In these functions, you declare what pieces of state you want to have access to and which action creators you need to be able to dispatch."},
    {"question": "What does mapDispatchToProps() do?",
     "categories": ["Redux"],
    "answer": "mapDispatchToProps() function is used to provide specific action creators to your React components so they can dispatch actions against the Redux store."},
    {"question": "What does the Connect method from react-redux do?",
     "categories": ["Redux"],
    "answer": "This method takes two optional arguments, mapStateToProps() and mapDispatchToProps() and connects them to a React Component. If you want to omit one you pass null in its place."},

    {"question": "PLACEHOLDER",
    "categories": ["=============================== Git QUESTIONS =============================================="],
    "answer": ""},
    {"question": "How do you view changes that are staged to commit?",
     "categories": ["Git"],
    "answer": "git show $COMMIT.  The $COMMIT selector selects the most recent commit."},
    {"question": "What is the command to list all local branches?",
     "categories": ["Git"],
    "answer": "git branch"},
    {"question": "What is the command to reset a branch back to a previous commit?",
     "categories": ["Git"],
    "answer": "git reset --hard {commit}"},
    {"question": "How do file paths work on GH pages?",
     "categories": ["Git"],
    "answer": "GH pages serves files from the root folder (either docs or master branch). You can only start file paths with ./ or just the file name or folder name.  You can't begin with /."},
    {"question": "How do you clone a private repository?",
     "categories": ["Git"],
    "answer": "Add your username and password in the git clone command: git clone https://username:mygithubpassword@github.com/organization/project.git.  You can also use SSH for authenitication and the process is slightly different if you have 2FA enabled."},
    {"question": "How do you create a branch and immediately switch to it?",
     "categories": ["Git"],
    "answer": "git checkout -b newBranchName"},
    {"question": "How do you pull a remote branch and then sync it the remote master branch?",
     "categories": ["Git"],
    "answer": "git branch -f remote-branch origin/remote-branch && git pull origin master"},
    {"question": "How do you change branches and save your changes without committing?",
     "categories": ["Git"],
    "answer": "git stash"},
    {"question": "How do you view stashes, the changes made in the most recent stash, and the changes in an arbitrary stash?",
     "categories": ["Git"],
    "answer": "git stash list, git stash show -p, git stash show -p stash@{3}"},
    {"question": "How do you see the changes made in the previous commit?  What about an arbitrary commit?",
     "categories": ["Git"],
    "answer": "git show HEAD, git show HEAD~n (to see the nth most recent commit)"},
    {"question": "How do you apply stash number n back on to a branch?",
     "categories": ["Git"],
    "answer": "git stash apply stash@{n}"},
    {"question": "How do you git diff HEAD to see the difference between two relative commits?",
     "categories": ["Git"],
    "answer": "git diff HEAD HEAD~1"},
    {"question": "How do you add modified files to changes to be committed?",
     "categories": ["Git"],
    "answer": "'git add -u' adds all new, renamed, and deleted files to the commit. git rm -fileName is technically the proper way to do it."},
    {"question": "How do you undo the last commit and move all the changes back to upstaged?",
     "categories": ["Git"],
    "answer": "git reset HEAD^"},
    {"question": "How do you push a feature branch to a remote feature branch?",
     "categories": ["Git"],
    "answer": "git push -u origin feature_branch_name"},
    {"question": "How do you remove one file from the staging area?",
     "categories": ["Git"],
    "answer": "git reset HEAD -- <file>"},
    {"question": "How do you undo the last commit?",
     "categories": ["Git"],
    "answer": "git reset HEAD~"},
    {"question": "How do you stage all deleted files?",
     "categories": ["Git"],
    "answer": "git add  `git ls-files --deleted`"},
    {"question": "How do you list all git branches with their last commit hash?",
     "categories": ["Git"],
    "answer": "git for-each-ref --sort=-committerdate refs/heads/"},
    {"question": "What is the difference between git stash and git pop?",
     "categories": ["Git"],
    "answer": "git stash pop throws away the (topmost, by default) stash after applying it, whereas git stash apply leaves it in the stash list for possible later reuse (or you can then git stash drop it)."},
    {"question": "",
     "categories": ["Git"],
    "answer": ""},
    {"question": "",
     "categories": ["Git"],
    "answer": ""},
    {"question": "",
     "categories": ["Git"],
    "answer": ""},
    {"question": "",
     "categories": ["Git"],
    "answer": ""},
    {"question": "",
     "categories": ["Git"],
    "answer": ""},
    {"question": "",
     "categories": ["Git"],
    "answer": ""},
    {"question": "",
     "categories": ["Git"],
    "answer": ""},
    {"question": "",
     "categories": ["Git"],
    "answer": ""},
    {"question": "",
     "categories": ["Git"],
    "answer": ""},
    {"question": "",
     "categories": ["Git"],
    "answer": ""},
    {"question": "",
     "categories": ["Git"],
    "answer": ""},
    {"question": "",
     "categories": ["Git"],
    "answer": ""},
    {"question": "",
     "categories": ["Git"],
    "answer": ""},

    {"question": "PLACEHOLDER",
    "categories": ["=============================== Bash QUESTIONS =============================================="],
    "answer": ""},
    {"question": "What do the -i and -X arguments in curl -i -X GET {endpoint} do?",
     "categories": ["Bash"],
    "answer": "-i --include includes the HTTP header in the output. -X --request specifies a custom request method like POST or DELETE, otherwise it defaults to GET."},
    {"question": "How can you query an API endpoint using bash?",
     "categories": ["Bash"],
    "answer": "curl -i -X GET {endpoint}.  If you have a back-end node application running on a localhost you can query that {endpoint}."},
    {"question": "How do you list all the files in a directory, including hidden files?",
     "categories": ["Bash"],
    "answer": "ls -a"},
    {"question": "How do you delete a directory",
     "categories": ["Bash"],
    "answer": "rm -rf.  This deletes a directory and all of its contents recursively."},
    {"question": "How do you list all global variables? How do you print a global variable to the command line?",
     "categories": ["Bash"],
    "answer": "printenv.  echo $GLOBAL_VARIABLE"},
    {"question": "How do you rename a file?",
     "categories": ["Bash"],
    "answer": "You can use mv because renaming a file can be interpreted as moving it from one name to another. mv fileName newFileName"},
    {"question": "How do you get the human readable size of a directory or file?",
     "categories": ["Bash"],
    "answer": "du -sh directory_name. OR du -bsh file_name"},
    {"question": "How do you list all files (including hidden) in a directory?",
     "categories": ["Bash"],
    "answer": "ls -a"},
    {"question": "How do you get the number of lines in a file ",
     "categories": ["Bash"],
    "answer": "wc -l filename"},
    {"question": "How do you see command line history?",
     "categories": ["Bash"],
    "answer": "open ~/.zsh_history"},
    {"question": "How do you open a file with a specified Application rather than default?",
     "categories": ["Bash"],
    "answer": "open -a "Visual Studio Code" dbtcloud_errors.py"},
    {"question": "",
     "categories": ["Bash"],
    "answer": ""},
    {"question": "",
     "categories": ["Bash"],
    "answer": ""},
    {"question": "",
     "categories": ["Bash"],
    "answer": ""},
    {"question": "",
     "categories": ["Bash"],
    "answer": ""},
    {"question": "",
     "categories": ["Bash"],
    "answer": ""},
    {"question": "",
     "categories": ["Bash"],
    "answer": ""},
    {"question": "",
     "categories": ["Bash"],
    "answer": ""},
    {"question": "",
     "categories": ["Bash"],
    "answer": ""},
    {"question": "",
     "categories": ["Bash"],
    "answer": ""},
    {"question": "",
     "categories": ["Bash"],
    "answer": ""},
    {"question": "",
     "categories": ["Bash"],
    "answer": ""},
    {"question": "",
     "categories": ["Bash"],
    "answer": ""},
    {"question": "",
     "categories": ["Bash"],
    "answer": ""},


    {"question": "PLACEHOLDER",
    "categories": ["=============================== Retention QUESTIONS =============================================="],
    "answer": ""},
    {"question": "",
     "categories": ["Retention"],
    "answer": ""},
    {"question": "",
     "categories": ["Retention"],
    "answer": ""},
    {"question": "",
     "categories": ["Retention"],
    "answer": ""},
    {"question": "",
     "categories": ["Retention"],
    "answer": ""},
    {"question": "",
     "categories": ["Retention"],
    "answer": ""},
    {"question": "",
     "categories": ["Retention"],
    "answer": ""},
    {"question": "",
     "categories": ["Retention"],
    "answer": ""},
    {"question": "",
     "categories": ["Retention"],
    "answer": ""},
    {"question": "",
     "categories": ["Retention"],
    "answer": ""},
    {"question": "",
     "categories": ["Retention"],
    "answer": ""},
    {"question": "",
     "categories": ["Retention"],
    "answer": ""},


    {"question": "PLACEHOLDER",
    "categories": ["=============================== Vim QUESTIONS =============================================="],
    "answer": ""},
    {"question": "What two modes does Vim have?  How do you switch between them?",
     "categories": ["Vim"],
    "answer": "Insert mode where you type to edit text and Command mode where keys are linked to actions.  Press i for insert mode and ESC for command mode."},
    {"question": "How do you exit vim?",
     "categories": ["Vim"],
    "answer": "Press Esc for Command mode then type :wq to save and exit"},
    {"question": "How do you copy the line you're on? How do you delete the line you're on?",
     "categories": ["Vim"],
    "answer": "yy to copy. dd to delete.  Have to be in normal mode."},
    {"question": "How do you delete a line in vim?",
     "categories": ["Vim"],
    "answer": "Press Escape for command mode then press dd."},
    {"question": "",
     "categories": ["Vim"],
    "answer": ""},
    {"question": "",
     "categories": ["Vim"],
    "answer": ""},
    {"question": "",
     "categories": ["Vim"],
    "answer": ""},
    {"question": "",
     "categories": ["Vim"],
    "answer": ""},

    {"question": "PLACEHOLDER",
    "categories": ["=============================== CypressJS QUESTIONS =============================================="],
    "answer": ""},
    {"question": "How do you open cypress?",
     "categories": ["CypressJS"],
    "answer": "npx cypress open"},
    {"question": "What are the 3 phases of a solid test?",
     "categories": ["CypressJS"],
    "answer": "Arrange, Act, and Assert.  Set up a test environment, take an action, and make an assertion about the resulting application state."},
    {"question": "What does the contains method from cypress do?",
     "categories": ["CypressJS"],
    "answer": "It finds the DOM element contain the text passed to contains."},
    {"question": "How do you select an element by CSS class?",
     "categories": ["CypressJS"],
    "answer": "cy.get()"},
    {"question": "What happens when you change pages in a cypress test?",
     "categories": ["CypressJS"],
    "answer": "Cypress fires a 'page transition event' and halts tests until the page loads."},
    {"question": "What is a pinned snapshot?",
     "categories": ["CypressJS"],
    "answer": "If you click on one of the commands in the Cypress log it will pin the application state you can manually inspect the DOM.  Hovering over other commands will not change the state."},
    {"question": "What is a default assertion?",
     "categories": ["CypressJS"],
    "answer": "Some tests are built to fail even if you don't specify an assertion.  For instance cy.visit() will fail by default if it can't locate the URL."},
    {"question": "What is the event hitbox?",
     "categories": ["CypressJS"],
    "answer": "On an action event a red hitbox will appear at the coordinates of the event."},
    {"question": "",
     "categories": ["CypressJS"],
    "answer": ""},
    {"question": "",
     "categories": ["CypressJS"],
    "answer": ""},
    {"question": "",
     "categories": ["CypressJS"],
    "answer": ""},

    {"question": "PLACEHOLDER",
    "categories": ["=============================== Miscellaneous QUESTIONS =============================================="],
    "answer": ""},
    {"question": "What is the difference between cache and cookies?",
     "categories": ["Miscellaneous"],
    "answer": ""},
    {"question": "What is a cookie?",
     "categories": ["Miscellaneous"],
    "answer": "Cookies are small files that contain information useful to a web site — such as password, preferences, browser, IP Address, date and time of visit, etc. Every time the user loads the website, the browser sends the cookie back to the server to notify the website of the user’s previous activity."},
    {"question": "What is a cache?",
     "categories": ["Miscellaneous"],
    "answer": "A web cache (or HTTP cache) is an information technology for the temporary storage (caching) of web documents, such as HTML pages and images, to reduce bandwidth usage, server load, and perceived lag. Cache is just a collection of data downloaded to help display a web page."},
    {"question": "What does Docker do?",
     "categories": ["Miscellaneous"],
    "answer": "Docker containers wrap up software and its dependencies into a standardized unit for software development that includes everything it needs to run: code, runtime, system tools and libraries."},
    {"question": "What are the advantages of using Docker?",
     "categories": ["Miscellaneous"],
    "answer": "Faster onboarding, make copies of production code run locally, polyglot programming, eliminate environment inconsistencies."},
    {"question": "What is polyglot programming?",
     "categories": ["Miscellaneous"],
    "answer": "Polyglot programming is the practice of writing code in multiple languages to capture additional functionality and efficiency not available in a single language."},
    {"question": "How do you update key bindings in the Brackets application?",
     "categories": ["Miscellaneous"],
    "answer": "Debug -> Open user key map.  This opens the keymap.json file where you can override bindings. If you have the display-shortcuts addon installed you can hit control+alt+/ to open a list of bindings."},
    {"question": "Where can you access HTTP requests?",
     "categories": ["Miscellaneous"],
    "answer": "You can access HTTP request bodies, headers, responses, etc. in the developer tools network tab."},
    {"question": "What is CORS?",
     "categories": ["Miscellaneous"],
    "answer": "Cross-Origin Resource Sharing (CORS) is a mechanism that uses additional HTTP headers to tell a browser to let a web application running at one origin (domain) have permission to access selected resources from a server at a different origin."},
    {"question": "When does a web application execute a CORS request?",
     "categories": ["Miscellaneous"],
    "answer": "A web application executes a cross-origin HTTP request when it requests a resource that has a different origin (domain, protocol, and port) than its own origin."},
    {"question": "How do you inspect an element's psuedoclass CSS rules?",
     "categories": ["Miscellaneous"],
    "answer": "Select an element in developer tools then choose a psuedoclass under the 'Force element state' options in the styles tab."},
    {"question": "What is software accretion? ",
     "categories": ["Miscellaneous"],
    "answer": "A common metaphor for the software development process.  It compares software development to an oyster accreting a pearl one grain of sand at a time.  The software can start with a skeleton and dummy cases - and the dummy cases are slowly filled in. "},
    {"question": "How is software development similar to construction?",
     "categories": ["Miscellaneous"],
    "answer": "It's similar to construction in terms of scale.  In a small application the penalty for making mistakes is relatively low. However in a large scale app (for example the empire state building) the penalty is higher thus it carries a greater need for plannning and overengineering."},
    {"question": "",
     "categories": ["Miscellaneous"],
    "answer": "Command Shift G"},
    {"question": "What are 4 agile development principles?",
     "categories": ["Miscellaneous"],
    "answer": "ndividuals and Interactions over processes and tools. Working Software over comprehensive documentation. Customer Collaboration over contract negotiation. Responding to Change over following a plan"},
    {"question": "Explain scrum",
     "categories": ["Miscellaneous"],
    "answer": "Scrum is an agile process framework for managing knowledge work, with an emphasis on software development. It is designed for teams of three to nine members, who break their work into actions that can be completed within timeboxed iterations, called sprints, no longer than one month and most commonly two weeks, then track progress and re-plan in 15-minute meetings, called daily scrums."},
    {"question": "What does SDK stand for?",
     "categories": ["Miscellaneous"],
    "answer": "Software development kit. "},
    {"question": "What is the difference between localStorage and sessionStorage?",
     "categories": ["Miscellaneous"],
    "answer": "They're very similar APIs except sessionStorage expires at the end of the sesssion - browser or tab close."},
    {"question": "",
     "categories": ["Miscellaneous"],
    "answer": ""},
    {"question": "",
     "categories": ["Miscellaneous"],
    "answer": ""},
    {"question": "",
     "categories": ["Miscellaneous"],
    "answer": ""},
    {"question": "",
     "categories": ["Miscellaneous"],
    "answer": ""},
    {"question": "",
     "categories": ["Miscellaneous"],
    "answer": ""},
    {"question": "",
     "categories": ["Miscellaneous"],
    "answer": ""},
    {"question": "",
     "categories": ["Miscellaneous"],
    "answer": ""},
    {"question": "",
     "categories": ["Miscellaneous"],
    "answer": ""}
]}
